#ifndef MY_CONFIG
#define MY_CONFIG

@header

#inc e
#include <unordered_map>

using namespace std;

#define green "\u001b[32m"
#define red "\u001b[31m"
#define normal "\033[0m"

namespace config {

    struct Header {
        string typ; // #header 
        string name = "NULL"; // name
        vector< pair<string, string> > configMap;
        int depth = 0;
        vector<Header*> inner;
        string language = "javascript";
    };

    struct Methods {
        string typ; // #header 
        string name = "NULL"; // name
        vector< pair<string, string> > configMap;
        int depth = 0;
        string language = "javascript";
    };
    
    struct Functions {
        string typ; // #header 
        string name = "NULL"; // name
        vector< pair<string, string> > configMap;
        int depth = 0;
        vector<Header*> inner;
        string language = "javascript";
    };

    struct Classes {
        string typ; // #header 
        string name = "NULL"; // name
        vector< pair<string, string> > configMap;
        int depth = 0;
        vector<Functions*> inner;
        string language = "javascript";
    };



    struct varsS {
        string typ; 
        string name = "NULL";
        string code;
        string inlinecode;
        string language = "javascript";
    };
    
    static vector<Header*> headerMap;

    static vector<varsS*> vars;
}

#endif